"+=======================+
"=	  Vim Config 	     =
"+=======================+

if &diffopt !~# 'internal'
  set diffexpr=MyDiff()
endif
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

"+=======================+
"=	  Vim 文件设置	     =
"+=======================+

"设置文件的代码形式 utf8
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,chinese,cp936

" 设置中文帮助 "
set helplang=cn

" 保留历史记录 "
set history=500

" 设置字体 "
set guifont=Consolas:h14

" 设置行号 "
set number

" 设置Tab四个空格 "
set tabstop=4
set softtabstop=4
set wrap " 设置自动换行
set linebreak " 设置整词换行
set scrolloff=5 " 设置自动上滚或者下滚
set autoread " 设置外部修改更新

" 查找/替换
set hlsearch " 高亮显示
set incsearch " 增量查找

" 状态栏显示
set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]  " 显示文件名：总行数，总的字符数
set ruler " 在编辑过程中，在右下角显示光标位置的状态行

" 代码设置
syntax enable " 打开语法高亮
syntax on " 打开语法高亮
set showmatch " 设置匹配模式，相当于括号匹配
set smartindent " 智能对齐
set autoindent " 设置自动对齐
set ai! " 设置自动缩进
set fdm=indent

" 允许删除换行符
:set backspace=indent,eol,start

" 自动补全括号和引号
inoremap ' ''<ESC>i
inoremap " ""<ESC>i
inoremap ( ()<ESC>i
inoremap [ []<ESC>i
inoremap { {<CR>}<ESC>O

" 实现删除左括号的同时自动删除有括号
function! RemovePairs()
    let s:line = getline(".")
    let s:previous_char = s:line[col(".")-1]

    if index(["(","[","{"],s:previous_char) != -1
        let l:original_pos = getpos(".")
        execute "normal %"
        let l:new_pos = getpos(".")
        " only right (
        if l:original_pos == l:new_pos
            execute "normal! a\<BS>"
            return
        end

        let l:line2 = getline(".")
        if len(l:line2) == col(".")
            execute "normal! v%xa"
        else
            execute "normal! v%xi"
        end
    else
        execute "normal! a\<BS>"
    end
endfunction

function! RemoveNextDoubleChar(char)
    let l:line = getline(".")
    let l:next_char = l:line[col(".")]

    if a:char == l:next_char
        execute "normal! l"
    else
        execute "normal! i" . a:char . ""
    end
endfunction

inoremap <BS> <ESC>:call RemovePairs()<CR>a
inoremap ) <ESC>:call RemoveNextDoubleChar(')')<CR>a
inoremap ] <ESC>:call RemoveNextDoubleChar(']')<CR>a
inoremap } <ESC>:call RemoveNextDoubleChar('}')<CR>a
"inoremap > <ESC>:call RemoveNextDoubleChar('>')<CR>a

"+=======================+
"=	     Vim 插件        =
"+=======================+
call plug#begin( '~\vimfiles\plugin')

"""vim下方状态栏
Plug 'vim-airline/vim-airline'		" 美化底部插件
Plug 'vim-airline/vim-airline-themes'	" 主题插件

"""主题hybird
Plug 'w0ng/vim-hybrid'

"""左侧文件树
"Plug 'scrooloose/nerdtree'

"""MarkDown语法高亮
Plug 'plasticboy/vim-markdown'

"""C++语法高亮
Plug 'octol/vim-cpp-enhanced-highlight' 

call plug#end()

"""""""""""""""""插件辅助设置"""""""""""""""""""""""""
""""hybird主题
set background=dark
colorscheme hybrid
let g:airline_theme = "hybrid"

""""airline设置
let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])

""""vim-markdown Github风格markdown语法
let g:vim_markdown_no_extensions_in_markdown = 1

"""C++语法高亮
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_experimental_template_highlight = 1
 


 
 
 
 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
